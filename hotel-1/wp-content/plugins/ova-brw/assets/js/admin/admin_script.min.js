!function(M){"use strict";var O={init:function(){this.ovabrw_datepicker(),this.choosehour(),this.change_pack_type(),this.brw_custom_checkout_taxonomy(),this.brw_create_manuall_order(),this.brw_update_order_status(),this.choosetime_full(),this.date_book(),this.brw_change_deposit(),this.brw_manage_vehicle(),this.brw_manage_feature_text(),this.brw_add_extra_feature(),this.brw_unavailable_time(),this.brw_local_price(),this.brw_setup_location(),this.brw_manage_resource(),this.brw_manage_service(),this.brw_manage_cus_taxonomy(),this.brw_ui_select_cus_tax(),this.brw_manage_period_time(),this.brw_manage_show_hide_field_at_frontend(),this.brw_manage_globa_discount(),this.brw_manage_special_time(),this.brw_manage_vehicle_with_location(),this.brw_change_rental_type(),this.brw_show_hide_field_edit_product(),this.brw_product_templates(),this.brw_product_map(),this.brw_admin_settings(),this.brw_hidden_field()},ovabrw_datepicker:function(){var t,o,a,i,_,n,c,s,l,d,e;switch(jQuery().datepicker&&(jQuery(".ova_brw_datepicker_short").each(function(){jQuery(this).datepicker({dateFormat:"dd-mm-yy",changeMonth:!0,changeYear:!1}).focus(function(){jQuery(".ui-datepicker-year").hide()})}),jQuery(".ova_brw_datepicker").each(function(){jQuery(this).datepicker({dateFormat:"yy-dd-mm",changeMonth:!0,changeYear:!0})}),jQuery(".ova_brw_datepicker_time").each(function(){e="12"==jQuery(this).attr("data-time")?"hh:mm a":"HH:mm",jQuery(this).timepicker({timeFormat:e,interval:15,dynamic:!1,dropdown:!0,scrollbar:!0})})),"undefined"!=typeof brw_lang_general_calendar&&jQuery.datetimepicker.setLocale(brw_lang_general_calendar),"undefined"!=typeof brw_disable_week_day&&(t=brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)})),"undefined"!=typeof first_day&&(d=first_day),"undefined"!=typeof brw_time_to_book_general_calendar&&(o=brw_time_to_book_general_calendar),"undefined"!=typeof brw_time_to_book_general_calendar_endate&&(a=brw_time_to_book_general_calendar_endate),"undefined"!=typeof brw_format_time&&(i=brw_format_time),_="undefined"!=typeof brw_date_format?brw_date_format:_){case"d-m-Y":_="DD-MM-Y";break;case"m/d/Y":_="MM/DD/Y";break;case"Y/m/d":_="Y/MM/DD";break;case"Y-m-d":_="Y-MM-DD";break;default:_="DD-MM-Y"}n="undefined"!=typeof brw_data_step&&""!=brw_data_step?brw_data_step:30,"undefined"!=typeof brw_hour_default_start&&(c=brw_hour_default_start),"undefined"!=typeof brw_hour_default_end&&(s=brw_hour_default_end),l=new Date,M.datetimepicker.setDateFormatter({parseDate:function(e,r){r=moment(e,r);return!!r.isValid()&&r.toDate()},formatDate:function(e,r){return moment(e).format(r)}}),jQuery(".ovabrw_datetimepicker").each(function(){var e=jQuery(this).attr("date_rent_full"),r="";void 0!==e&&!1!==e&&(r=e);var a=jQuery(this).attr("data-disable-week-day");t=a?a.toString().split(",").map(function(e){return parseInt(e,10)}):"undefined"!=typeof brw_disable_week_day?brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)}):"";e=!0,a=_+" "+i;M(this).hasClass("no_time_picker")&&(e=!1,a=_);r={dayOfWeekStart:d,minDate:l,disabledWeekDays:t,formatDate:_,format:a,formatTime:i,defaultTime:c,step:n,allowTimes:o,timepicker:e,disabledDates:r};jQuery(this).datetimepicker(r)}),jQuery(".ovabrw_datetimepicker.ova-date-search").each(function(){var e=jQuery(this).attr("data-disable-week-day");t=e?e.toString().split(",").map(function(e){return parseInt(e,10)}):"undefined"!=typeof brw_disable_week_day?brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)}):"";e={dayOfWeekStart:d,minDate:!1,disabledWeekDays:t,format:_+" "+i,formatTime:i,defaultTime:c,step:n,allowTimes:o,timepicker:!0};jQuery(this).datetimepicker(e)}),jQuery(".ovabrw_datetimepicker.ovabrw_end_date").on("click",function(){var e=!1;e=(e=(e=jQuery(this).parent(".rental_item").parent(".sub-item").children(".rental_item").children(".ovabrw_start_date").val())||jQuery(this).parent("td").parent(".tr_petime_discount").children("td").children(".ovabrw_start_date").val())||jQuery(this).closest(".booking_filter").find(".ovabrw_start_date").val();var r=jQuery(this).attr("data-disable-week-day");t=r?r.toString().split(",").map(function(e){return parseInt(e,10)}):"undefined"!=typeof brw_disable_week_day?brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)}):"";e={dayOfWeekStart:d,minDate:e||!1,disabledWeekDays:t,format:_+" "+i,formatDate:_,formatTime:i,defaultTime:s,step:n,allowTimes:a,timepicker:!0};jQuery(this).datetimepicker(e)}),jQuery('input[name="to_day"]').on("click",function(){var e=jQuery(this).closest(".booking_filter").find('input[name="from_day"]').val(),r=jQuery(this).attr("data-disable-week-day");t=r?r.toString().split(",").map(function(e){return parseInt(e,10)}):"undefined"!=typeof brw_disable_week_day?brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)}):"";e={dayOfWeekStart:d,minDate:e||!1,disabledWeekDays:t,format:_+" "+i,formatDate:_,formatTime:i,defaultTime:s,step:n,allowTimes:a,timepicker:!0};jQuery(this).datetimepicker(e)}),jQuery(".unavailable_time").each(function(){var e=jQuery(this).attr("data-disable-week-day");t=e?e.toString().split(",").map(function(e){return parseInt(e,10)}):"undefined"!=typeof brw_disable_week_day?brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)}):"";e="HH:mm",e={dayOfWeekStart:d,minDate:l,disabledWeekDays:t,format:_+" "+e,formatDate:_+" "+e,formatTime:e,defaultTime:c,step:n,allowTimes:[],timepicker:!0};jQuery(this).datetimepicker(e)}),jQuery(".unavailable_time.end_date").on("click",function(){var e=(e=jQuery(this).closest(".tr_rt_untime").find('input[name="ovabrw_untime_startdate[]"]').val())||jQuery(this).closest("#meta-box-id-vehicle").find('input[name="ovabrw_id_vehicle_untime_from_day[startdate]"]').val(),r=jQuery(this).attr("data-disable-week-day");t=r?r.toString().split(",").map(function(e){return parseInt(e,10)}):"undefined"!=typeof brw_disable_week_day?brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)}):"";r="HH:mm",r={dayOfWeekStart:d,minDate:e||!1,disabledWeekDays:t,format:_+" "+r,formatDate:_+" "+r,formatTime:r,defaultTime:s,step:n,allowTimes:[],timepicker:!0};jQuery(this).datetimepicker(r)})},choosehour:function(){var e,r,a;"undefined"!=typeof brw_lang_general_calendar&&(e=brw_lang_general_calendar),jQuery.datetimepicker.setLocale(e),"undefined"!=typeof brw_time_to_book_general_calendar&&(r=brw_time_to_book_general_calendar),""==(a="undefined"!=typeof brw_data_step?brw_data_step:30)&&(a=30);new Date;M.datetimepicker.setDateFormatter({parseDate:function(e,r){r=moment(e,r);return!!r.isValid()&&r.toDate()},formatDate:function(e,r){return moment(e).format(r)}}),jQuery(".ovabrw_pehour_picker").each(function(){var e="",e={datepicker:!1,format:e="undefined"!=typeof brw_format_time?brw_format_time:"hh:mm A",formatTime:e,step:a,allowTimes:r};jQuery(this).datetimepicker(e)})},change_pack_type:function(){jQuery(".row_petime_record").each(function(){jQuery(this).bind("change_package_type",function(){var e,r=jQuery(this).find("select.ovabrw_package_type :selected").val();"inday"==r?(e=jQuery("select#ovabrw_unfixed_time :selected").val(),jQuery(this).find(".ovabrw_petime_days").hide(),jQuery(this).find(".period_times").show(),"yes"!==e?(jQuery(this).find(".period_times").show(),jQuery(this).find(".period_times_unfixed").hide()):(jQuery(this).find(".period_times_unfixed").show(),jQuery(this).find(".period_times").hide())):"other"==r&&(jQuery(this).find(".ovabrw_petime_days").show(),jQuery(this).find(".period_times").hide(),jQuery(this).find(".period_times_unfixed").hide())}),jQuery(this).trigger("change_package_type"),jQuery(this).find("select.ovabrw_package_type").change(function(){jQuery(this).trigger("change_package_type")})})},brw_custom_checkout_taxonomy:function(){var x="Option Value",D="Option Text",q="Option Price",M="Add new option",O="Remove option";"undefined"!=typeof label_option_value&&(x=label_option_value),"undefined"!=typeof label_option_text&&(D=label_option_text),"undefined"!=typeof label_add_new_opt&&(M=label_add_new_opt),"undefined"!=typeof label_remove_opt&&(O=label_remove_opt);var a="Are you sure ?";"undefined"!=typeof label_are_you_sure&&(a=label_are_you_sure);var o="";o+="<tr>",o+='<td><input type="text" name="ova_options_key[]" placeholder="'+x+'" /></td>',o+='<td><input type="text" name="ova_options_text[]" placeholder="'+D+'" /></td>',o+='<td><input type="text" name="ova_options_price[]" placeholder="'+q+'" /></td>',o+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_addfield btn btn-blue" title="'+M+'">+</a></td>',o+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_row btn btn-red" title="'+O+'">x</a></td>',o+="</tr>",jQuery(document).on("click",".ovabrw_addfield",function(e){var r=jQuery(this).closest("table"),a=r.find("tbody tr").size(),t=(t=jQuery(".ova-wrap-popup-ckf").attr("height"))?parseInt(t)+5:110;jQuery(".ova-wrap-popup-ckf").attr("height",t),jQuery(".ova-wrap-popup-ckf").css("height",t+"vh"),0<a?r.find("tbody tr:last").after(o):r.find("tbody").append(o)}),jQuery(document).on("click",".ovabrw_remove_row",function(e){var r=jQuery(this).closest("table");jQuery(this).closest("tr").remove(),0==r.find("tbody tr").size()&&r.find("tbody").append(o)});var i="";i+="<tr>",i+='<td><input type="text" name="ova_values[]" placeholder="Value" /></td>',i+='<td><input type="text" name="ova_prices[]" placeholder="Price" /></td>',i+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_add_value btn btn-blue" title="Add">+</a></td>',i+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_value btn btn-red" title="Remove">x</a></td>',i+="</tr>",jQuery(document).on("click",".ovabrw_add_value",function(e){var r=jQuery(this).closest("table"),a=r.find("tbody tr").size(),t=(t=jQuery(".ova-wrap-popup-ckf").attr("height"))?parseInt(t)+5:110;jQuery(".ova-wrap-popup-ckf").attr("height",t),jQuery(".ova-wrap-popup-ckf").css("height",t+"vh"),0<a?r.find("tbody tr:last").after(i):r.find("tbody").append(i)}),jQuery(document).on("click",".ovabrw_remove_value",function(e){var r=jQuery(this).closest("table");jQuery(this).closest("tr").remove(),0==r.find("tbody tr").size()&&r.find("tbody").append(i)});var _="";_+="<tr>",_+='<td><input type="text" name="ova_checkbox_key[]" placeholder="'+x+'" /></td>',_+='<td><input type="text" name="ova_checkbox_text[]" placeholder="'+D+'" /></td>',_+='<td><input type="text" name="ova_checkbox_price[]" placeholder="'+q+'" /></td>',_+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_add_checkbox_option btn btn-blue" title="'+M+'">+</a></td>',_+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_checkbox_option btn btn-red" title="'+O+'">x</a></td>',_+="</tr>",jQuery(document).on("click",".ovabrw_add_checkbox_option",function(e){var r=jQuery(this).closest("table"),a=r.find("tbody tr").size(),t=(t=jQuery(".ova-wrap-popup-ckf").attr("height"))?parseInt(t)+5:110;jQuery(".ova-wrap-popup-ckf").attr("height",t),jQuery(".ova-wrap-popup-ckf").css("height",t+"vh"),0<a?r.find("tbody tr:last").after(_):r.find("tbody").append(_)}),jQuery(document).on("click",".ovabrw_remove_checkbox_option",function(e){var r=jQuery(this).closest("table");jQuery(this).closest("tr").remove(),0==r.find("tbody tr").size()&&r.find("tbody").append(_)}),jQuery(".ovabrw_edit_field_form").on("click",function(e){var r=jQuery(this).data("data_edit"),a=r.name,t=r.type||"text",o=r.max_file_size,i=r.label,_=r.placeholder,n=r.default,c=r.class,s=r.ova_options_key,l=r.ova_options_text,d=r.ova_options_price,p=r.ova_values,u=r.ova_prices,v=r.ova_checkbox_key,b=r.ova_checkbox_text,w=r.ova_checkbox_price,f=r.slug,h=r.singular_name,y=r.label_frontend,m=r.required,j=r.enabled,r=r.show_listing;"select"==t||"radio"==t||"checkbox"==t||"file"==t?jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none"):jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","table-row"),"checkbox"==t?jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","table-row"):jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","none"),"file"==t?(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr .formats-file-size").show(),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-file-size").css("display","table-row"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-default").css("display","none")):(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-default").css("display","table-row"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-file-size").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr .formats-file-size").hide());var Q="";"select"===t?(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options table.ova-sub-table tbody").empty(),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","table-row"),s.forEach(function(e,r){Q+="<tr>",Q+='<td><input type="text" name="ova_options_key[]" placeholder="'+x+'" value="'+e+'" /></td>',Q+='<td><input type="text" name="ova_options_text[]" placeholder="'+D+'" value="'+l[r]+'" /></td>',d[r]?Q+='<td><input type="text" name="ova_options_price[]" placeholder="'+q+'" value="'+d[r]+'" /></td>':Q+='<td><input type="text" name="ova_options_price[]" placeholder="'+q+'" value="" /></td>',Q+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_addfield btn btn-blue" title="'+M+'">+</a></td>',Q+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_row btn btn-red" title="'+O+'">x</a></td>',Q+="</tr>"}),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options table.ova-sub-table tbody").append(Q)):jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","none");var k="";"radio"===t?(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-values table.ova-sub-table tbody").empty(),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-values").css("display","table-row"),p.forEach(function(e,r){k+="<tr>",k+='<td><input type="text" name="ova_values[]" value="'+e+'" placeholder="Value" /></td>',u[r]?k+='<td><input type="text" name="ova_prices[]" value="'+u[r]+'" placeholder="Price" /></td>':k+='<td><input type="text" name="ova_prices[]" value="" placeholder="Price" /></td>',k+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_add_value btn btn-blue" title="Add">+</a></td>',k+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_value btn btn-red" title="Remove">x</a></td>',k+="</tr>"}),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-values table.ova-sub-table tbody").append(k)):jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-values").css("display","none");var g="";"checkbox"===t?(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options table.ova-sub-table tbody").empty(),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","table-row"),v.forEach(function(e,r){g+="<tr>",g+='<td><input type="text" name="ova_checkbox_key[]" placeholder="'+x+'" value="'+e+'" /></td>',g+='<td><input type="text" name="ova_checkbox_text[]" placeholder="'+D+'" value="'+b[r]+'" /></td>',w[r]?g+='<td><input type="text" name="ova_checkbox_price[]" placeholder="'+q+'" value="'+w[r]+'" /></td>':g+='<td><input type="text" name="ova_checkbox_price[]" placeholder="'+q+'" value="" /></td>',g+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_add_checkbox_option btn btn-blue" title="'+M+'">+</a></td>',g+='<td class="ova-box"><a href="javascript:void(0)" class="ovabrw_remove_checkbox_option btn btn-red" title="'+O+'">x</a></td>',g+="</tr>"}),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options table.ova-sub-table tbody").append(g)):jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","none"),jQuery('#ova_popup_field_form input[name="ova_action"]').val("edit"),jQuery('#ova_popup_field_form input[name="ova_old_name"]').val(a),jQuery('#ova_popup_field_form input[name="ova_old_slug"]').val(f),jQuery("#ova_type").val(t),jQuery("#ova_popup_field_form .ova-row-name input").val(a),jQuery("#ova_popup_field_form .ova-row-file-size input").val(o),jQuery("#ova_popup_field_form .ova-row-label input").val(i),jQuery("#ova_popup_field_form .ova-row-placeholder input").val(_),jQuery("#ova_popup_field_form .ova-row-default input").val(n),jQuery("#ova_popup_field_form .ova-row-class input").val(c),jQuery("#ova_popup_field_form .ova-row-slug input").val(f).attr("readonly",!0),jQuery("#ova_popup_field_form .ova-row-sigular-name input").val(h),jQuery("#ova_popup_field_form .ova-row-label-frontend input").val(y),"on"==m?jQuery("#ova_popup_field_form .row-required #ova_required").prop("checked",!0):jQuery("#ova_popup_field_form .row-required #ova_required").prop("checked",!1),"on"==j?jQuery("#ova_popup_field_form .row-required #ova_enable").prop("checked",!0):jQuery("#ova_popup_field_form .row-required #ova_enable").prop("checked",!1),"on"==r?jQuery("#ova_popup_field_form .row-show-listing #show_listing").prop("checked",!0):jQuery("#ova_popup_field_form .row-show-listing #show_listing").prop("checked",!1),jQuery(".ova-wrap-popup-ckf").css("display","block")}),jQuery("#ovabrw_openform").on("click",function(e){jQuery('#ova_popup_field_form input[name="ova_action"]').val("new"),jQuery('#ova_popup_field_form input[name="ova_old_name"]').val(""),jQuery('#ova_popup_field_form input[name="ova_old_slug"]').val(""),jQuery(".ova-wrap-popup-ckf").css("display","block"),jQuery("#ova_type").val("text"),jQuery('.ova-wrap-popup-ckf input[name="name"]').val(""),jQuery('.ova-wrap-popup-ckf input[name="label"]').val(""),jQuery('.ova-wrap-popup-ckf input[name="placeholder"]').val(""),jQuery('.ova-wrap-popup-ckf input[name="default"]').val(""),jQuery(".ova-wrap-popup-ckf .row-options").css("display","none"),jQuery(".ova-wrap-popup-ckf .row-values").css("display","none"),jQuery(".ova-wrap-popup-ckf .row-checkbox-options").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-row-placeholder").css("display","table-row"),jQuery('.ova-wrap-popup-ckf input[name="slug"]').val("").removeAttr("readonly"),jQuery('.ova-wrap-popup-ckf input[name="singular_name"]').val(""),jQuery('.ova-wrap-popup-ckf input[name="label_frontend"]').val(""),jQuery(".ova-wrap-popup-ckf #ova_required").attr("checked","checked"),jQuery(".ova-wrap-popup-ckf #ova_enable").attr("checked","checked"),jQuery(".ova-wrap-popup-ckf #show_listing").attr("checked","checked"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-file-size").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr .formats-file-size").hide()}),jQuery("#ovabrw_select_all_field").on("click",function(e){var r=jQuery(this).prop("checked");jQuery(".ova-list-checkout-field table tbody tr td.ova-checkbox input").prop("checked",r)}),jQuery("#ovabrw_close_popup").on("click",function(e){jQuery(".ova-wrap-popup-ckf").css("display","none")}),jQuery('input[name="remove"]').on("click",function(e){var r;([r=""]=[a],confirm(r))||e.preventDefault()}),jQuery("#ova_type").on("change",function(){jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-values").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","table-row"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-price").css("display","none"),"select"==jQuery(this).val()&&(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","table-row"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-values").css("display","none")),"radio"==jQuery(this).val()&&(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-values").css("display","table-row"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none")),"checkbox"==jQuery(this).val()&&(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-checkbox-options").css("display","table-row")),"file"==jQuery(this).val()?(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr .formats-file-size").show(),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-file-size").css("display","table-row"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-default").css("display","none")):(jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-file-size").css("display","none"),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr .formats-file-size").hide(),jQuery(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-default").css("display","table-row"))})},brw_create_manuall_order:function(){O.brw_create_order_change_product(),O.brw_create_order_pickup_date_change(),O.brw_create_order_end_date_change(),O.brw_create_order_pickup_loc_change(),O.brw_create_order_remove_order_item(),O.brw_create_order_change_fields_transportation(),O.brw_create_order_change_quantity(),O.brw_create_order_change_fields_period_time(),O.brw_create_order_change_deposit(),O.brw_create_order_country(),O.brw_ship_to_different_address(),O.brw_create_order_change_resources(),O.brw_create_order_change_services(),O.brw_create_order_ckf(),O.brw_create_order_submit(),jQuery(".insert_wrap_item").on("click",function(e){e.preventDefault();e=jQuery(this).data("row");jQuery(this).closest(".wrap").find(".wrap_item").append(e),O.brw_create_order_change_product(),O.brw_create_order_pickup_date_change(),O.brw_create_order_end_date_change(),O.brw_create_order_pickup_loc_change(),O.brw_create_order_remove_order_item(),O.brw_create_order_change_fields_transportation(),O.brw_create_order_change_quantity(),O.brw_create_order_change_fields_period_time(),O.brw_create_order_change_deposit(),O.brw_create_order_change_resources(),O.brw_create_order_change_services(),O.brw_create_order_ckf(),O.brw_create_order_submit()})},brw_create_order_change_product:function(){jQuery('.ovabrw-order select[name="ovabrw_name_product[]"]').on("change",function(){var e=jQuery(this).val(),D=jQuery(this).parent(".rental_item").parent(".sub-item").parent(".item").addClass("test_item"),q=(jQuery(this).data("date_format"),jQuery(this).data("short_date_format"));D.children(".sub-item").children(".rental_item").find("input").val(""),D.children(".sub-item").children(".rental_item.show_number_vehicle").find("input").val(1),e?D.children(".sub-item.ovabrw-meta").css("display","block"):D.children(".sub-item.ovabrw-meta").css("display","none"),D.children(".sub-item").children(".ovabrw-total-time").css("display","none"),D.children(".sub-item").children(".ovabrw-total-cost").css("display","none"),D.children(".sub-item").children(".ovabrw-amount-remaining").css("display","none"),D.children(".sub-item").children(".ovabrw-error").css("display","none"),D.children(".sub-item").find(".ovabrw_number_available_vehicle").css("display","none"),D.children(".sub-item").find(".ovabrw_number_available_vehicle").empty(),D.children(".sub-item").find(".ovabrw_number_vehicle").attr("max",1),jQuery.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_load_data_product_create_order",name_product:e},success:function(e){var a,r=jQuery.parseJSON(e),t=r.rental_type,o=r.petime_id,i=r.petime_label,_=r.ovabrw_amount_insurance,n=r.product_price,c=r.ovabrw_id_vehicles,s=r.ovabrw_define_1_day,l=r.show_number_vehicle,d=r.show_pickup_loc,p=r.show_pickoff_loc,u=r.html_pickup_location,v=r.html_dropoff_location,b=r.html_custom_ckf,w=r.html_resources,f=r.html_services,h=r.show_pickup_date,y=r.show_dropoff_date,m=r.unfixed_time,j=r.disable_week_day,e=[];r.order_date&&(e=JSON.parse(r.order_date),a=[],e.forEach(function(e,r){e.hasOwnProperty("rendering")&&a.push(e.start_v2)})),a&&D.find(".ovabrw_datetimepicker").attr("date_rent_full",a),D.find("#ovabrw-price-detail").val(n),D.find("select[name='ovabrw_rental_type[]']").children("option[value='"+t+"']").prop("selected",!0),D.find('select[name="ovabrw_define_1_day[]"]').children("option[value='"+s+"']").prop("selected",!0);var s=!1,Q="",k="";if(k+='<select id="ovabrw-package" class="select_ovabrw_package" name="ovabrw_package[]" required>',k+='<option value="">------</option>',"period_time"===t&&o)for(var g in D.children(".sub-item").children(".ovabrw-dropoff").css("display","none"),D.children(".sub-item").children(".ovabrw-dropoff").find('input[name="ovabrw_dropoff_date[]"]').prop("required",!1),s=!0,o)o.hasOwnProperty(g)&&(k+='<option value="'+o[g]+'">'+i[g]+"</option>");else D.children(".sub-item").children(".ovabrw-dropoff").css("display","block"),D.children(".sub-item").children(".ovabrw-dropoff").find('input[name="ovabrw_dropoff_date[]"]').prop("required",!0);if(k+="</select>",Q+='<select id="ovabrw-id-vehicle" class="select_ovabrw_id_vehicle" name="ovabrw_id_vehicle[]">',c)for(var x in c)c.hasOwnProperty(x)&&(Q+='<option value="'+c[x]+'">'+c[x]+"</option>");Q+="</select>",D.children(".sub-item").children(".ovabrw-package").children(".ovabrw-package-span").empty(),D.children(".sub-item").children(".ovabrw-package").css("display","block"),D.children(".sub-item").children(".rental_item").children(".ovabrw_amoun_insurance").val(_),D.children(".sub-item").children(".ovabrw-id-vehicle").children(".ovabrw-id-vehicle-span").html(Q),c?D.children(".sub-item").children(".rental_item.ovabrw-id-vehicle").css("display","block"):D.children(".sub-item").children(".rental_item.ovabrw-id-vehicle").css("display","none"),s?(D.children(".sub-item").children(".ovabrw-package").children("label").text("Package"),D.children(".sub-item").children(".ovabrw-package").children(".ovabrw-package-span").html(k)):D.children(".sub-item").children(".ovabrw-package").css("display","none"),"no"==l||c?D.children(".sub-item").children(".rental_item.show_number_vehicle").css("display","none"):D.children(".sub-item").children(".rental_item.show_number_vehicle").css("display","block"),"no"==d?D.children(".sub-item").children(".rental_item.show_pickup_loc").css("display","none"):D.children(".sub-item").children(".rental_item.show_pickup_loc").css("display","block"),"no"==p?D.children(".sub-item").children(".rental_item.show_pickoff_loc").css("display","none"):D.children(".sub-item").children(".rental_item.show_pickoff_loc").css("display","block"),D.children(".sub-item").children(".rental_item.show_pickup_loc").find("select.ovabrw_pickup_loc").empty(),D.children(".sub-item").children(".rental_item.show_pickoff_loc").find("select.ovabrw_pickoff_loc").empty(),D.children(".sub-item").children(".rental_item.show_pickup_loc").find("select.ovabrw_pickup_loc").html(u),D.children(".sub-item").children(".rental_item.show_pickoff_loc").find("select.ovabrw_pickoff_loc").html(v),D.children(".sub-item").children(".rental_item.ovabrw-custom_ckf").empty(),D.children(".sub-item").children(".rental_item.ovabrw-custom_ckf").html(b),D.children(".sub-item").children(".rental_item.ovabrw-resources").find("span.ovabrw-resources-span").empty(),w?(D.children(".sub-item").children(".rental_item.ovabrw-resources").find("span.ovabrw-resources-span").html(w),D.children(".sub-item").children(".rental_item.ovabrw-resources").css("display","flex")):(D.children(".sub-item").children(".rental_item.ovabrw-resources").find("span.ovabrw-resources-span").empty(),D.children(".sub-item").children(".rental_item.ovabrw-resources").css("display","none")),D.children(".sub-item").children(".rental_item.ovabrw-services").find("span.ovabrw-services-span").empty(),f?(D.children(".sub-item").children(".rental_item.ovabrw-services").find("span.ovabrw-services-span").html(f),D.children(".sub-item").children(".rental_item.ovabrw-services").css("display","flex")):(D.children(".sub-item").children(".rental_item.ovabrw-services").find("span.ovabrw-services-span").empty(),D.children(".sub-item").children(".rental_item.ovabrw-services").css("display","none")),"period_time"==t&&"yes"!=m?(D.children(".sub-item").children(".rental_item.ovabrw-pickup").find("input.ovabrw_datetimepicker").addClass("no_time_picker startdate_perido_time"),D.children(".sub-item").children(".rental_item.ovabrw-pickup").find("input.ovabrw_datetimepicker").attr("placeholder",q)):D.children(".sub-item").children(".rental_item.ovabrw-pickup").find("input.ovabrw_datetimepicker").removeClass("no_time_picker startdate_perido_time"),"no"==h&&D.find('input[name="ovabrw_pickup_date[]"]').css("display","none"),"no"==y&&(D.find(".ovabrw-dropoff").find('input[name="ovabrw_dropoff_date[]"]').prop("required",!1),D.find(".ovabrw-dropoff").hide()),"transportation"!=D.find('select[name="ovabrw_rental_type[]"]').val()||r.show_dropoff_date_location?D.find('input[name="ovabrw_dropoff_date[]"]').prop("readonly",!1):D.find('input[name="ovabrw_dropoff_date[]"]').prop("readonly",!0),j?(D.find('input[name="ovabrw_pickup_date[]"]').attr("data-disable-week-day",j),D.find('input[name="ovabrw_dropoff_date[]"]').attr("data-disable-week-day",j)):(D.find('input[name="ovabrw_pickup_date[]"]').attr("data-disable-week-day",""),D.find('input[name="ovabrw_dropoff_date[]"]').attr("data-disable-week-day","")),O.ovabrw_datepicker(),O.brw_create_order_change_fields_period_time(),O.brw_create_order_ckf(),O.brw_create_order_change_fields_transportation(),O.brw_create_order_view_total_cost(M(this))}})})},brw_create_order_view_total_cost:function(e){var o=jQuery(e).closest(".item"),i=o.find(".ovabrw_name_product").val(),r=o.find(".ovabrw_start_date").val(),a=o.find(".ovabrw_end_date").val(),t=o.find(".ovabrw_number_vehicle").val(),_=o.find(".ovabrw_pickup_loc").val(),n=o.find(".ovabrw_pickoff_loc").val(),c="";"period_time"==o.find('select[name="ovabrw_rental_type[]"]').val()&&(c=o.find("#ovabrw-package").val());var s=[];o.find(".resources_order input[type=checkbox]:checked").each(function(){s[M(this).data("resource_key")]=M(this).val()});var l=M.extend({},s),d=[];o.find(".services_order select[name='ovabrw_service["+i+"][]']").each(function(){M(this).val()&&d.push(M(this).val())});var p=M.extend({},d);o.children(".sub-item").children(".ovabrw-total-time").css("display","none"),o.children(".sub-item").children(".ovabrw-total-cost").css("display","none"),o.children(".sub-item").children(".ovabrw-amount-remaining").css("display","none"),o.children(".sub-item").children(".ovabrw-error").css("display","none");var u={},e=o.find('input[name="data_custom_ckf"]').data("ckf");e&&M.each(e,function(e,r){var a;"radio"==r.type&&(u[e]=o.find('input[name="'+e+"["+i+']"]:checked').val()),"checkbox"==r.type&&(a=[],o.find('input[name="'+e+"["+i+'][]"]:checked').each(function(){a.push(M(this).val())}),u[e]=a),"select"==r.type&&(u[e]=o.find('select[name="'+e+"["+i+']"]').val())}),jQuery.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_total_price_and_quantity",id_product:i,start_date:r,end_date:a,id_package:c,number_vehicle:t,pickup_loc:_,dropoff_loc:n,resources:JSON.stringify(l),services:JSON.stringify(p),custom_ckf:JSON.stringify(u)},success:function(e){var r,a=jQuery.parseJSON(e),t=a.error;o.find(".services_order select[name='ovabrw_service["+i+"][]']").each(function(){M(this).hasClass("required")&&(M(this).val()?M(this).closest(".item").children(".error_item").css("display","none"):M(this).closest(".item").children(".error_item").css("display","block"))}),t?(o.children(".sub-item").children(".ovabrw-error").css("display","inline-block"),o.find(".ovabrw_number_available_vehicle").html(""),o.children(".sub-item").children(".ovabrw-error").children(".ovabrw-error-span").text(a.message)):(r=a.quantity,e=a.line_total,t=a.product_price,a=a.number_vehicle_available,o.find(".ovabrw_number_available_vehicle").html("Max:"+a),"transportation"==o.find('select[name="ovabrw_rental_type[]"]').val()&&o.find(".ovabrw_number_vehicle").attr("max",a),o.children(".sub-item").children(".ovabrw-total-time").css("display","block"),o.children(".sub-item").children(".ovabrw-total-cost").css("display","block"),o.find("#ovabrw-price-detail").val(t),o.find("#ovabrw-total-time").val(r),o.find("#ovabrw-total-product").val(e),t||o.find("#ovabrw-price-detail").val(e))}})},brw_create_order_pickup_date_change:function(){jQuery('.ovabrw-order input[name="ovabrw_pickup_date[]"]').on("change",function(){"transportation"!=M(this).closest(".item").find('select[name="ovabrw_rental_type[]"]').val()&&O.brw_create_order_view_total_cost(M(this))})},brw_create_order_end_date_change:function(){jQuery(".ovabrw-order .ovabrw_end_date").on("change",function(){var _=jQuery(this),e=_.val(),r=_.closest(".ovabrw-meta").find(".ovabrw_start_date").val(),a=_.closest(".item").find(".ovabrw_name_product").val(),t=_.closest(".ovabrw-meta").find(".ovabrw_pickup_loc").val(),o=_.closest(".ovabrw-meta").find(".ovabrw_pickoff_loc").val(),i=_.closest(".ovabrw-meta").find(".select_ovabrw_package").val();_.closest(".ovabrw-meta").find(".ovabrw_number_available_vehicle").css("display","inline-block"),jQuery.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_id_vehicle_rest",id_product:a,pickup_date:r,dropp_off:e,pickup_loc:t,dropoff_loc:o,package_id:i},success:function(e){var r=jQuery.parseJSON(e),a=r.error,e=r.number_vehicle_available;if(a)_.closest(".ovabrw-meta").find(".ovabrw-error").css("display","inline-block"),_.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text(r.message),_.closest(".ovabrw-meta").find(".ovabrw_number_available_vehicle").text(" Available rooms: 0"),_.closest(".ovabrw-meta").find(".ovabrw_number_vehicle").attr("max",1);else{var t=r.vehicle_availables,o="";if(o+='<select id="ovabrw-id-vehicle" class="select_ovabrw_id_vehicle" name="ovabrw_id_vehicle[]">',t)for(var i in t)t.hasOwnProperty(i)&&(o+='<option value="'+t[i]+'">'+t[i]+"</option>");o+="</select>",_.closest(".sub-item").find(".ovabrw-id-vehicle-span").empty(),_.closest(".sub-item").find(".ovabrw-id-vehicle-span").html(o),_.closest(".ovabrw-meta").find(".ovabrw-error").css("display","none"),_.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text(""),e?(_.closest(".ovabrw-meta").find(".ovabrw_number_available_vehicle").text(" Available rooms: "+e),_.closest(".ovabrw-meta").find(".ovabrw_number_vehicle").attr("max",e)):(_.closest(".ovabrw-meta").find(".ovabrw_number_available_vehicle").text(" Available rooms: 0"),_.closest(".ovabrw-meta").find(".ovabrw_number_vehicle").attr("max",1))}}}),O.brw_create_order_view_total_cost(M(this))})},brw_create_order_pickup_loc_change:function(){jQuery(".ovabrw-order .ovabrw_pickup_loc").on("change",function(){var a=jQuery(this),t=a.val(),e=a.closest(".item").find(".ovabrw_name_product").val();jQuery.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_rental_type_product",id_product:e},success:function(e){var r;"transportation"==jQuery.parseJSON(e).rental_type&&(M(a).closest(".ovabrw-meta").find("select.ovabrw_pickoff_loc").empty(),e=M(a).find('option[value="'+t+'"]').data("item_loc"),r='<option value="">-----</option>',r=e?(e.forEach(function(e){e&&(r+='<option value="'+e+'" >'+e+"</option>")}),r||'<option value="">Select Location</option>'):'<option value="">Select Location</option>',M(a).closest(".ovabrw-meta").find("select.ovabrw_pickoff_loc").append(r))}}),O.brw_create_order_view_total_cost(M(this))})},brw_create_order_remove_order_item:function(){jQuery(".ovabrw-order").on("click",".delete_order",function(e){e.preventDefault(),jQuery(this).closest(".ovabrw-order").remove()})},brw_create_order_transportation:function(r){var a=jQuery(r).closest(".ovabrw-meta"),e=a.find('input[name="ovabrw_pickup_date[]"]').val(),t=a.closest(".item").find(".ovabrw_name_product").val(),o=a.find(".ovabrw_pickup_loc").val(),i=a.find(".ovabrw_pickoff_loc").val();a.find(".ovabrw_number_available_vehicle").css("display","inline-block"),e&&o&&i&&jQuery.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_dropoff_date_transportation",id_product:t,pickup_date:e,pickup_loc:o,dropoff_loc:i},success:function(e){e=jQuery.parseJSON(e);e.error?(a.find(".ovabrw-error").css("display","inline-block"),a.find(".ovabrw-error").children(".ovabrw-error-span").text(e.message)):(a.closest(".item").find('input[name="ovabrw_dropoff_date[]"]').val(e.dropoff),a.closest(".item").find(".ovabrw-dropoff").css("display","block"),O.brw_create_order_view_total_cost(jQuery(r)))}})},brw_create_order_change_fields_transportation:function(){"transportation"==jQuery('.ovabrw-order select[name="ovabrw_rental_type[]"]').val()&&(jQuery('.ovabrw-order select[name="ovabrw_pickup_loc[]"]').on("change",function(){O.brw_create_order_transportation(M(this))}),jQuery('.ovabrw-order select[name="ovabrw_pickoff_loc[]"]').on("change",function(){O.brw_create_order_transportation(M(this))}),jQuery('.ovabrw-order input[name="ovabrw_pickup_date[]"]').on("change",function(){O.brw_create_order_transportation(M(this))}))},brw_create_order_change_quantity:function(){jQuery('.ovabrw-order input[name="ovabrw_number_vehicle[]"]').on("change",function(){O.brw_create_order_view_total_cost(M(this))})},brw_create_order_change_fields_period_time:function(){jQuery('.ovabrw-order input[name="ovabrw_pickup_date[]"]').on("change",function(){var r=M(this),e=r.val(),a=r.closest(".item").find(".ovabrw_name_product").val();r.closest(".ovabrw-meta").find(".select_ovabrw_package").attr("disabled","disabled"),M.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_package_by_time",startdate:e,post_id:a},success:function(e){r.closest(".ovabrw-meta").find(".select_ovabrw_package").empty();var a="",e=M.parseJSON(e);e&&M.each(e,function(e,r){a+='<option value="'+e+'">'+r+"</option>"}),a&&r.closest(".ovabrw-meta").find(".select_ovabrw_package").append(a),r.closest(".ovabrw-meta").find(".select_ovabrw_package").attr("disabled",!1)}}),O.brw_create_order_view_total_cost(M(this))}),jQuery('.ovabrw-order select[name="ovabrw_package[]"]').on("change",function(){var _=jQuery(this),e=_.closest(".ovabrw-meta").find(".ovabrw_start_date").val(),r=_.closest(".ovabrw-meta").find(".ovabrw_end_date").val(),a=_.closest(".item").find(".ovabrw_name_product").val(),t=_.closest(".ovabrw-meta").find(".ovabrw_pickup_loc").val(),o=_.closest(".ovabrw-meta").find(".ovabrw_pickoff_loc").val(),i=_.closest(".ovabrw-meta").find(".select_ovabrw_package").val();_.closest(".ovabrw-meta").find(".ovabrw_number_available_vehicle").css("display","inline-block"),jQuery.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_id_vehicle_rest",id_product:a,pickup_date:e,dropp_off:r,pickup_loc:t,dropoff_loc:o,package_id:i},success:function(e){var r=jQuery.parseJSON(e),a=r.error,e=r.number_vehicle_available;if(a)_.closest(".ovabrw-meta").find(".ovabrw-error").css("display","inline-block"),_.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text(r.message);else{var t=r.vehicle_availables,o="";if(o+='<select id="ovabrw-id-vehicle" class="select_ovabrw_id_vehicle" name="ovabrw_id_vehicle[]">',t)for(var i in t)t.hasOwnProperty(i)&&(o+='<option value="'+t[i]+'">'+t[i]+"</option>");o+="</select>",_.closest(".ovabrw-meta").find('input[name="ovabrw_number_vehicle[]"]').attr("max",e),_.closest(".ovabrw-meta").find(".ovabrw_number_available_vehicle").html("Max: "+e).css("display","inline-block"),_.closest(".sub-item").find(".ovabrw-id-vehicle-span").empty(),_.closest(".sub-item").find(".ovabrw-id-vehicle-span").html(o),_.closest(".ovabrw-meta").find(".ovabrw-error").css("display","none"),_.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text("")}}}),O.brw_create_order_view_total_cost(M(this))})},brw_create_order_change_deposit:function(){jQuery('.ovabrw-order input[name="ovabrw_amount_deposite[]"]').on("change",function(){var e=M(this),r=parseFloat(e.val()),a=parseFloat(e.closest(".ovabrw-meta").find('.ovabrw-total-cost input[name="ovabrw_total_product[]"]').val());r<0?(e.closest(".ovabrw-meta").find(".ovabrw-error").css("display","inline-block"),e.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text("Deposit amount must be greater than 0")):(e.closest(".ovabrw-meta").find(".ovabrw-error").css("display","none"),e.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text("")),0<=r&&a?(a<r?(e.closest(".ovabrw-meta").find(".ovabrw-error").css("display","inline-block"),e.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text("Deposit amount must be less than or equal to Cost")):(e.closest(".ovabrw-meta").find(".ovabrw-error").css("display","none"),e.closest(".ovabrw-meta").find(".ovabrw-error").children(".ovabrw-error-span").text("")),(r=a-r)<0?(e.closest(".ovabrw-meta").find(".ovabrw-amount-remaining").css("display","none"),e.closest(".ovabrw-meta").find('.ovabrw-amount-remaining input[name="ovabrw_amount_remaining[]"]').val(0)):(e.closest(".ovabrw-meta").find(".ovabrw-amount-remaining").css("display","block"),e.closest(".ovabrw-meta").find('.ovabrw-amount-remaining input[name="ovabrw_amount_remaining[]"]').val(r))):(e.closest(".ovabrw-meta").find(".ovabrw-amount-remaining").css("display","none"),e.closest(".ovabrw-meta").find('.ovabrw-amount-remaining input[name="ovabrw_amount_remaining[]"]').val(0))})},brw_create_order_country:function(){0<jQuery(".ovabrw_country").length&&jQuery(".ovabrw_country").select2()},brw_ship_to_different_address:function(){jQuery(".ship-to-different-address").each(function(){jQuery(this).find('input[name="ship_to_different_address"]').on("click",function(){jQuery(this).is(":checked")?(jQuery(this).closest(".ovabrw-wrap").find(".ovabrw-shipping").css("display","flex"),jQuery(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_first_name"]').prop("required",!0),jQuery(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_last_name"]').prop("required",!0),jQuery(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_phone"]').prop("required",!0),jQuery(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_address_1"]').prop("required",!0),jQuery(this).closest(".ovabrw-wrap").find('.ovabrw-shipping select[name="ship_ovabrw_country"]').prop("required",!0)):(jQuery(this).closest(".ovabrw-wrap").find(".ovabrw-shipping").css("display","none"),jQuery(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_first_name"]').prop("required",!1),jQuery(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_last_name"]').prop("required",!1),jQuery(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_phone"]').prop("required",!1),jQuery(this).closest(".ovabrw-wrap").find('.ovabrw-shipping input[name="ship_ovabrw_address_1"]').prop("required",!1),jQuery(this).closest(".ovabrw-wrap").find('.ovabrw-shipping select[name="ship_ovabrw_country"]').prop("required",!1))})})},brw_create_order_change_resources:function(){jQuery(document).on("change",".resources_order",function(e){O.brw_create_order_view_total_cost(M(this))})},brw_create_order_change_services:function(){jQuery(document).on("change",".services_order",function(e){O.brw_create_order_view_total_cost(M(this))})},brw_create_order_ckf:function(){M("form#booking-filter .ovabrw-ckf-price").on("change",function(){O.brw_create_order_view_total_cost(M(this))}),M('form#booking-filter .ovabrw-file input[type="file"]').each(function(){M(this).on("change",function(e){e.preventDefault();var r=M(this),a=r.data("max-file-size"),t=r.data("max-file-size-msg"),o=r.data("formats"),i=r.data("file-mimes"),_=[];"object"==typeof i&&M.each(i,function(e,r){_.push(r)}),r.closest(".ovabrw-file").find(".ovabrw-file-name").html("");var n=this.files[0].name,e=this.files[0].size,i=this.files[0].type;n&&e&&i&&(r.closest(".ovabrw-file").find(".ovabrw-file-name").html(n),a<(e/1048576).toFixed(2)&&r.closest(".ovabrw-file").find(".ovabrw-file-name").html(t),-1==M.inArray(i,_)&&r.closest(".ovabrw-file").find(".ovabrw-file-name").html(o))})}),M("form#booking-filter .ovabrw-ckf-checkbox.ovabrw-required").on("change",function(){M(this).find('input[type="checkbox"]:checked').val()?M(this).find(".ovabrw-error").hide():M(this).find(".ovabrw-error").show()})},brw_create_order_submit:function(){M('form#booking-filter button[type="submit"]').on("click",function(r){var e=M(this).closest("form#booking-filter");e.find('input[type="file"]').each(function(){var e;M(this).prop("required")&&!M(this).val()&&(e=M(this).data("required"),M(this).closest(".ovabrw-file").find(".ovabrw-file-name").empty().html(e),r.preventDefault())}),e.find(".ovabrw-ckf-checkbox.ovabrw-required").each(function(){M(this).find('input[type="checkbox"]:checked').val()||(M(this).find(".ovabrw-error").show(),r.preventDefault())})})},brw_update_order_status:function(){jQuery(document).on("change",".update_order_status",function(e){var r,a,t,o=jQuery(this).children("option:selected").html(),i=jQuery(this).children("option:selected").val(),o=confirm("Do you want to "+o+" Booking ?"),_=M(this);1==o&&""!=i&&(o=jQuery(this).data("order_id"),r=jQuery(this).children("option:selected").val().replace("wc-",""),a=jQuery(this).closest(".order_status").find(".order-status"),t=jQuery(this).closest(".order_status").find(".order-status span"),jQuery.post(ajaxurl,{action:"update_order_status_woo",order_id:o,new_order_status:i},function(e){"error_permission"===e?alert(_.data("error-per-msg")):"false"===e?alert(_.data("error-update-msg")):(a.attr("class",""),a.addClass("order-status tips status-"+r),t.html(r))})),e.preventDefault()})},choosetime_full:function(){var r,a,t;switch("undefined"!=typeof brw_date_format&&(r=brw_date_format),"undefined"!=typeof brw_time_format&&0,"undefined"!=typeof brw_format_time&&(a=brw_format_time),"undefined"!=typeof first_day&&(t=first_day),r){case"d-m-Y":r="DD-MM-Y";break;case"m/d/Y":r="MM/DD/Y";break;case"Y/m/d":r="Y/MM/DD";break;case"Y-m-d":r="Y-MM-DD";break;default:r="DD-MM-Y"}M.datetimepicker.setDateFormatter({parseDate:function(e,r){r=moment(e,r);return!!r.isValid()&&r.toDate()},formatDate:function(e,r){return moment(e).format(r)}}),jQuery(".datetimepicker_full").each(function(){var e=new Date,e={format:r+""+a,dayOfWeekStart:t,minDate:e,changeMonth:!0,changeYear:!0};jQuery(this).datetimepicker(e)})},date_book:function(){jQuery(".date_book").each(function(){var e;switch("undefined"!=typeof first_day&&(r=first_day),e="undefined"!=typeof brw_date_format?brw_date_format:e){case"d-m-Y":e="DD-MM-Y";break;case"m/d/Y":e="MM/DD/Y";break;case"Y/m/d":e="Y/MM/DD";break;case"Y-m-d":e="Y-MM-DD";break;default:e="DD-MM-Y"}new Date;M.datetimepicker.setDateFormatter({parseDate:function(e,r){r=moment(e,r);return!!r.isValid()&&r.toDate()},formatDate:function(e,r){return moment(e).format(r)}});var r={dateFormat:e,dayOfWeekStart:r,changeMonth:!0,step:30,changeYear:!0};jQuery(this).datetimepicker(r)})},brw_change_deposit:function(){"no"===jQuery(".ovabrw_metabox_car_rental #ovabrw_enable_deposit").val()?(jQuery(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","none"),jQuery(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","none"),jQuery(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","none")):(jQuery(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","block"),jQuery(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","block"),jQuery(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","block")),jQuery(".ovabrw_metabox_car_rental #ovabrw_enable_deposit").on("change",function(){"no"===jQuery(this).val()?(jQuery(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","none"),jQuery(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","none"),jQuery(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","none")):(jQuery(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","block"),jQuery(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","block"),jQuery(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","block"))}),jQuery("body").on("change",".woocommerce_order_items input.amount_deposit",function(){var e=jQuery(this).closest("tr.item"),r=jQuery(this).val(),a=jQuery("input.deposit_remaining",e),e=jQuery("input.line_total",e);""!==r&&0<parseFloat(e.val())-parseFloat(r)?a.val(parseFloat(e.val())-parseFloat(r)):a.val("")}).on("change",".woocommerce_order_items input.line_total",function(){var e=jQuery(this).closest("tr.item"),r=jQuery("input.amount_remaining",e),a=jQuery("input.deposit_paid",e),e=jQuery(this).val();""!==a.val()&&0<=parseFloat(e)-parseFloat(a.val())?r.val(parseFloat(e)-parseFloat(a.val())):r.val("")})},brw_manage_vehicle:function(){var r,e=jQuery(".ovabrw_metabox_car_rental #ovabrw_manage_store").val(),a="";"store"===e?(jQuery(".ovabrw_metabox_car_rental .ovabrw_id_vehicle_wrap ").hide(),jQuery(".ovabrw_metabox_car_rental .ovabrw_car_count_field ").css("display","block"),jQuery(".ovabrw_metabox_car_rental .select_id_vehicle select").find("option").remove(),jQuery(".ovabrw_metabox_car_rental .select_id_vehicle select").append(a)):(jQuery(".ovabrw_metabox_car_rental .ovabrw_car_count_field ").css("display","none"),jQuery(".ovabrw_metabox_car_rental .ovabrw_id_vehicle_wrap ").show()),jQuery(".ovabrw_metabox_car_rental #ovabrw_manage_store").on("change",function(){var e=jQuery(this).val();a="","store"===e?(jQuery(".ovabrw_metabox_car_rental .ovabrw_id_vehicle_wrap ").hide(),jQuery(".ovabrw_metabox_car_rental .ovabrw_car_count_field ").css("display","block"),jQuery(".ovabrw_metabox_car_rental .select_id_vehicle select").find("option").remove(),jQuery(".ovabrw_metabox_car_rental .select_id_vehicle select").append(a)):(jQuery(".ovabrw_metabox_car_rental .ovabrw_id_vehicle_wrap ").show(),jQuery(".ovabrw_metabox_car_rental .ovabrw_car_count_field ").css("display","none"),r=jQuery(".ovabrw_metabox_car_rental .select_id_vehicle .ovabrw_html_option").data("html_all_id_vehicle"),jQuery(".ovabrw_metabox_car_rental .select_id_vehicle select").find("option").remove(),jQuery(".ovabrw_metabox_car_rental .select_id_vehicle select").append(r))})},brw_change_rental_type:function(){jQuery("body").on("woocommerce-product-type-change",function(e,r,a){"ovabrw_car_rental"==r?(jQuery(".show_if_ovabrw_car_rental").show(),jQuery(".product_data_tabs .general_options").show(),jQuery("ul.product_data_tabs li").removeClass("active"),jQuery("ul.product_data_tabs li.general_options").addClass("active"),jQuery("#shipping_product_data").css("display","none"),jQuery("#general_product_data").css("display","block"),jQuery(" ul.product_data_tabs li.general_tab").addClass("show_if_variable_bulk").show(),jQuery("#general_product_data .pricing").addClass("show_if_variable_bulk").show(),jQuery("#general_product_data ._sale_price_field").hide(),jQuery("#general_product_data .sale_price_dates_fields").hide(),jQuery("#general_product_data .pricing").css("border-bottom","none"),jQuery("ul.product_data_tabs li.inventory_tab").show(),jQuery(".inventory_options").addClass("show_if_variable_bulk").show(),jQuery("#inventory_product_data ._manage_stock_field").addClass("show_if_variable_bulk").show(),jQuery("#inventory_product_data ._sold_individually_field").parent().addClass("show_if_variable_bulk").show(),jQuery("#inventory_product_data ._sold_individually_field").addClass("show_if_variable_bulk").show()):"grouped"==r?(jQuery(".show_if_ovabrw_car_rental").hide(),jQuery(".product_data_tabs .general_options").hide()):(jQuery(".show_if_ovabrw_car_rental").hide(),jQuery("#general_product_data ._regular_price_field label span").hide(),jQuery("#general_product_data ._sale_price_field").show(),jQuery("#general_product_data .sale_price_dates_fields").show(),jQuery("#general_product_data .pricing").css("border-bottom","1px solid #eee"))})},brw_manage_feature_text:function(){jQuery(".ovabrw_features a.insert_rt_feature").click(function(e){e.preventDefault();e=jQuery(this).data("row");jQuery(this).closest(".ovabrw_features").find("tbody").append(e)}),jQuery(".ovabrw_metabox_car_rental").on("click",".delete_feature",function(e){e.preventDefault(),jQuery(this).closest(".tr_rt_feature").remove()}),jQuery(".ovabrw_other_features a.insert_rt_other_feature").click(function(e){e.preventDefault();e=jQuery(this).data("row");jQuery(this).closest(".ovabrw_other_features").find("tbody").append(e)}),jQuery(".ovabrw_metabox_car_rental").on("click",".delete_other_feature",function(e){e.preventDefault(),jQuery(this).closest(".tr_rt_other_feature").remove()})},brw_add_extra_feature:function(){jQuery(".add_extra_features").click(function(e){e.preventDefault(),jQuery(".product_data_tabs li").removeClass("active"),jQuery(".product_data_tabs .attribute_options").addClass("active"),jQuery(".ovabrw_metabox_car_rental").hide(),jQuery("#product_attributes").show()})},brw_unavailable_time:function(){jQuery(".ovabrw_rt_untime a.insert_rt_untime").click(function(e){e.preventDefault();e=jQuery(this).data("row");jQuery(this).closest(".ovabrw_rt_untime").find("tbody").append(e),O.ovabrw_datepicker()}),jQuery(".ovabrw_metabox_car_rental").on("click",".delete_untime",function(e){e.preventDefault(),jQuery(this).closest(".tr_rt_untime").remove()})},brw_local_price:function(){jQuery(".ovabrw_local_price a.insert_local_price").click(function(e){e.preventDefault();e=jQuery(this).data("row");jQuery(this).closest(".ovabrw_local_price").find("tbody").append(e)}),jQuery(".ovabrw_metabox_car_rental").on("click",".delete_local_price",function(e){e.preventDefault(),jQuery(this).closest(".tr_rt_local_price").remove()}),jQuery(".ovabrw_local_price ").on("change",'select[name="ovabrw_pickup_location[]"]',function(){var e=jQuery(this);e.val()?(e.closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').prop("disabled",!1),e.closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').val("")):e.closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').prop("disabled",!0)}),jQuery(".ovabrw_local_price ").on("click",'select[name="ovabrw_dropoff_location[]"]',function(){var r=jQuery(this),a=r.closest(".tr_rt_local_price").find('select[name="ovabrw_pickup_location[]"]'),t=a.val();t?r.prop("disabled",!1):r.prop("disabled",!0);var o=[];jQuery('.ovabrw_local_price select[name="ovabrw_pickup_location[]"]').each(function(e){var r=jQuery(this).not(a).val();t==r&&(r=jQuery(this).closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').val(),o.push(r))}),o&&o.forEach(function(e){e&&(e=e.replace(" ","\\ "),r.find("option[value="+e+"]").prop("disabled",!0))})})},brw_setup_location:function(){M(".ovabrw_st_locations a.insert_st_location").on("click",function(e){e.preventDefault();e=M(this).data("row");M(this).closest(".ovabrw_st_locations").find("tbody").append(e)}),M(".ovabrw_metabox_car_rental").on("click",".delete_st_location",function(e){e.preventDefault(),M(this).closest(".tr_setup_loc").remove()}),M(".ovabrw_st_locations").on("change",'select[name="ovabrw_st_pickup_loc[]"]',function(){M(this).val()?(M(this).closest(".tr_setup_loc").find('select[name="ovabrw_st_dropoff_loc[]"]').prop("disabled",!1),M(this).closest(".tr_setup_loc").find('select[name="ovabrw_st_dropoff_loc[]"]').val("")):M(this).closest(".tr_setup_loc").find('select[name="ovabrw_st_dropoff_loc[]"]').prop("disabled",!0)}),M(".ovabrw_st_locations").on("click",'select[name="ovabrw_st_dropoff_loc[]"]',function(){var r=M(this),a=r.closest(".tr_setup_loc").find('select[name="ovabrw_st_pickup_loc[]"]'),t=a.val();t?r.prop("disabled",!1):r.prop("disabled",!0);var o=[];M('.ovabrw_st_locations select[name="ovabrw_st_pickup_loc[]"]').each(function(e){var r=M(this).not(a).val();t==r&&(r=M(this).closest(".tr_setup_loc").find('select[name="ovabrw_st_dropoff_loc[]"]').val(),o.push(r))}),o&&o.forEach(function(e){e&&(e=e.replace(" ","\\ "),r.find("option[value="+e+"]").prop("disabled",!0))})})},brw_manage_resource:function(){jQuery(".ovabrw_resources a.insert_resources").click(function(e){e.preventDefault();e=jQuery(this).data("row");jQuery(this).closest(".ovabrw_resources").find("tbody").append(e);e=jQuery(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?jQuery(this).closest(".ovabrw_resources").find("select option[value='hours']").remove():"hour"===e?jQuery(this).closest(".ovabrw_resources").find("select option[value='days']").remove():"transportation"===e&&(jQuery(this).closest(".ovabrw_resources").find("select option[value='hours']").remove(),jQuery(this).closest(".ovabrw_resources").find("select option[value='days']").remove())}),jQuery(".ovabrw_metabox_car_rental").on("click",".delete_resource",function(e){e.preventDefault(),jQuery(this).closest(".tr_rt_resource").remove()})},brw_manage_service:function(){jQuery(".ovabrw_metabox_car_rental").on("click",".ovabrw_service .insert_service_group",function(e){e.preventDefault();e=jQuery(this).data("row");jQuery(this).closest(".ovabrw_service").find(".wrap_ovabrw_service_group").last().append(e),O.brw_sort_key_service()}),jQuery(document).on("click",".ovabrw_service .insert_service_option",function(e){e.preventDefault();e=jQuery(this).parent("th").find(".ovabrw_content_service table tbody").html();jQuery(this).closest("table.widefat").find("tbody.wrap_service").append(e);e=jQuery(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?jQuery(this).closest(".ovabrw_service").find(".wrap_service").find("select option[value='hours']").remove():"hour"===e?jQuery(this).closest(".ovabrw_service").find(".wrap_service").find("select option[value='days']").remove():"transportation"===e&&(jQuery(this).closest(".ovabrw_service").find(".wrap_service").find("select option[value='hours']").remove(),jQuery(this).closest(".ovabrw_service").find(".wrap_service").find("select option[value='days']").remove()),O.brw_sort_key_service()}),jQuery(".ovabrw_metabox_car_rental").on("click",".delete_service",function(e){e.preventDefault(),jQuery(this).closest(".tr_rt_service").remove(),O.brw_sort_key_service()}),jQuery(".ovabrw_metabox_car_rental").on("click",".delete_service_group",function(e){e.preventDefault(),jQuery(this).closest(".ovabrw_service_group").remove(),O.brw_sort_key_service()})},brw_sort_key_service:function(){var e=0;jQuery(".ovabrw_service_group").each(function(){jQuery(this).attr("data-pos",e),e++});for(var r=0;r<e;r++)jQuery(".ovabrw_service_group").each(function(){jQuery(this).attr("data-pos")==r&&(jQuery(this).find('.wrap_service input[name*="ovabrw_service_id"]').attr("name","ovabrw_service_id["+r+"][]"),jQuery(this).find('.wrap_service input[name*="ovabrw_service_name"]').attr("name","ovabrw_service_name["+r+"][]"),jQuery(this).find('.wrap_service input[name*="ovabrw_service_price"]').attr("name","ovabrw_service_price["+r+"][]"),jQuery(this).find('.wrap_service select[name*="ovabrw_service_duration_type"]').attr("name","ovabrw_service_duration_type["+r+"][]"))})},brw_manage_cus_taxonomy:function(){a("loaded"),jQuery("#product_catchecklist input").length&&jQuery("#product_catchecklist input").on("change",function(e){var t=jQuery(this);t.attr("disabled","disabled"),a("changed");var r=function(e){const r=document.querySelectorAll(`input[name="${e}"]:checked`);let a=[];return r.forEach(e=>{a.push(e.value)}),a}("tax_input[product_cat][]");jQuery.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_custom_tax_in_cat",checked_tax:r},success:function(e){if(t.removeAttr("disabled"),e){var r=e.split(",");if(r.length)for(var a=0;a<r.length;a++)0<jQuery("#"+r[a]+"div").length&&jQuery("#"+r[a]+"div").show()}}})})},brw_ui_select_cus_tax:function(){0<jQuery(".ovabrw_custom_tax_with_cat").length&&jQuery(".ovabrw_custom_tax_with_cat").select2(),0<jQuery('select[name="product_id"]').length&&jQuery('select[name="product_id"]').select2(),M('select[name="ovabrw_choose_custom_checkout_field"]').each(function(){function e(e){var r=e.closest("form").find('select[name="ovabrw_custom_checkout_field[]"]');r.length&&("all"==e.val()?r.closest(".show_special_checkout_field").hide():r.closest(".show_special_checkout_field").show())}e(M(this)),M(this).on("change",function(){e(M(this))})})},brw_manage_period_time:function(){jQuery(".ovabrw_petime a.insert_petime_record").click(function(e){e.preventDefault();var r=jQuery(this).data("row"),e=jQuery(".ovabrw_petime .row_petime_record").length,r=r.replace('data-pos=""','data-pos="'+e+'"');jQuery(this).closest(".ovabrw_petime").find("tbody").first().append(r),O.choosehour(),O.change_pack_type()}),jQuery(".ovabrw_metabox_car_rental").on("click",".ovabrw_petime .delete_petime",function(e){e.preventDefault(),jQuery(this).closest(".row_petime_record").remove(),O.brw_sort_petime()}),jQuery(".ovabrw_metabox_car_rental").on("click","a.insert_petime_discount",function(e){e.preventDefault();var r=jQuery(this).find(".wrap_petime_discount tbody").html(),e=jQuery(this).closest(".row_petime_record").data("pos"),r=r.replace(/ovabrw_key/g,e);jQuery(this).closest(".ovabrw_petime_discount").find("tbody").first().append(r),O.ovabrw_datepicker()}),jQuery(".ovabrw_metabox_car_rental").on("click",".ovabrw_petime .delete_petime_discount",function(e){e.preventDefault(),jQuery(this).closest(".tr_petime_discount").remove()}),jQuery("#ovabrw_unfixed_time").on("change",function(){"yes"==jQuery("select#ovabrw_unfixed_time :selected").val()?(jQuery(".period_times").hide(),jQuery(".period_times_unfixed").show()):(jQuery(".period_times").show(),jQuery(".period_times_unfixed").hide())})},brw_sort_petime:function(){var e=0;jQuery(".ovabrw_petime .row_petime_record").each(function(){jQuery(this).attr("data-pos",e),e++});for(var r=jQuery(".ovabrw_petime .row_petime_record").length,a=0;a<r;a++)jQuery(".wrap_petime .row_petime_record").each(function(){jQuery(this).attr("data-pos")==a&&(jQuery(this).find("tbody.real .ovabrw_petime_discount_price").attr("name","ovabrw_petime_discount["+a+"][price][]"),jQuery(this).find("tbody.real .ovabrw_petime_discount_start_time").attr("name","ovabrw_petime_discount["+a+"][start_time][]"),jQuery(this).find("tbody.real .ovabrw_petime_discount_end_time").attr("name","ovabrw_petime_discount["+a+"][end_time][]"))})},brw_manage_show_hide_field_at_frontend:function(){"new_form"!=jQuery("#ovabrw_manage_extra_tab").val()&&jQuery(".ovabrw_extra_tab_shortcode_field").css("display","none"),jQuery("#ovabrw_manage_extra_tab").on("change",function(){jQuery(".ovabrw_extra_tab_shortcode_field").css("display","block"),"new_form"!=jQuery(this).val()&&jQuery(".ovabrw_extra_tab_shortcode_field").css("display","none")}),"new_time"!=jQuery("#ovabrw_manage_time_book_start").val()&&jQuery(".ovabrw_product_time_to_book_start_field").css("display","none"),jQuery("#ovabrw_manage_time_book_start").on("change",function(){jQuery(".ovabrw_product_time_to_book_start_field").css("display","block"),"new_time"!=jQuery(this).val()&&jQuery(".ovabrw_product_time_to_book_start_field").css("display","none")}),"new_time"!=jQuery("#ovabrw_manage_time_book_end").val()&&jQuery(".ovabrw_product_time_to_book_end_field").css("display","none"),jQuery("#ovabrw_manage_time_book_end").on("change",function(){jQuery(".ovabrw_product_time_to_book_end_field").css("display","block"),"new_time"!=jQuery(this).val()&&jQuery(".ovabrw_product_time_to_book_end_field").css("display","none")}),"new_time"!=jQuery("#ovabrw_manage_default_hour_start").val()&&jQuery(".ovabrw_product_default_hour_start_field").css("display","none"),jQuery("#ovabrw_manage_default_hour_start").on("change",function(){jQuery(".ovabrw_product_default_hour_start_field").css("display","block"),"new_time"!=jQuery(this).val()&&jQuery(".ovabrw_product_default_hour_start_field").css("display","none")}),"new_time"!=jQuery("#ovabrw_manage_default_hour_end").val()&&jQuery(".ovabrw_product_default_hour_end_field").css("display","none"),jQuery("#ovabrw_manage_default_hour_end").on("change",function(){jQuery(".ovabrw_product_default_hour_end_field").css("display","block"),"new_time"!=jQuery(this).val()&&jQuery(".ovabrw_product_default_hour_end_field").css("display","none")});var e=jQuery("#ovabrw_price_type").children("option:selected").val(),r=jQuery("#ovabrw_define_1_day").children("option:selected").val();"day"==e&&"hotel"==r&&jQuery(".none-day-hotel").css("display","none"),jQuery("#ovabrw_define_1_day").on("change",function(){jQuery(".none-day-hotel").css("display","block"),"hotel"==jQuery(this).val()&&jQuery(".none-day-hotel").css("display","none")}),"new"!==jQuery("#ovabrw_manage_custom_checkout_field").val()&&jQuery(".ovabrw_product_custom_checkout_field_field").css("display","none"),jQuery("#ovabrw_manage_custom_checkout_field").on("change",function(){jQuery(".ovabrw_product_custom_checkout_field_field").css("display","block"),"all"==jQuery(this).val()&&jQuery(".ovabrw_product_custom_checkout_field_field").css("display","none")}),"new"!==jQuery("#ovabrw_label_pickup_date_product").val()&&jQuery(".ovabrw_new_pickup_date_product_field").css("display","none"),jQuery("#ovabrw_label_pickup_date_product").on("change",function(){jQuery(".ovabrw_new_pickup_date_product_field").css("display","block"),"new"!==jQuery(this).val()&&jQuery(".ovabrw_new_pickup_date_product_field").css("display","none")}),"new"!==jQuery("#ovabrw_label_dropoff_date_product").val()&&jQuery(".ovabrw_new_dropoff_date_product_field").css("display","none"),jQuery("#ovabrw_label_dropoff_date_product").on("change",function(){jQuery(".ovabrw_new_dropoff_date_product_field").css("display","block"),"new"!==jQuery(this).val()&&jQuery(".ovabrw_new_dropoff_date_product_field").css("display","none")})},brw_manage_globa_discount:function(){jQuery(".ovabrw_metabox_car_rental").on("click",".ovabrw_global_discount .delete",function(e){e.preventDefault(),jQuery(this).closest(".row_discount").remove()}),jQuery(".ovabrw_global_discount a.insert_discount").click(function(e){e.preventDefault();var r=jQuery(this).data("row"),e=jQuery(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?r=r.replace('<option value="hours">Hour(s)</option>',""):"hour"===e&&(r=r.replace('<option value="days">Day(s)</option>',"")),jQuery(this).closest(".ovabrw_global_discount").find("tbody").append(r)})},brw_manage_special_time_sort_rt:function(){var e=0;jQuery(".ovabrw_rt .row_rt_record").each(function(){jQuery(this).attr("data-pos",e),e++});for(var r=jQuery(".ovabrw_rt .row_rt_record").length,a=0;a<r;a++)jQuery(".wrap_rt .row_rt_record").each(function(){jQuery(this).attr("data-pos")==a&&(jQuery(this).find("tbody.real .ovabrw_rt_discount_price").attr("name","ovabrw_rt_discount["+a+"][price][]"),jQuery(this).find("tbody.real .ovabrw_rt_discount_duration").attr("name","ovabrw_rt_discount["+a+"][duration][]"),jQuery(this).find("tbody.real .ovabrw_rt_discount_duration_type").attr("name","ovabrw_rt_discount["+a+"][duration_type][]"))})},brw_manage_special_time:function(){jQuery(".ovabrw_rt a.insert_rt_record").click(function(e){e.preventDefault();var r=jQuery(this).data("row"),e=jQuery(".ovabrw_rt .row_rt_record").length,r=r.replace('data-pos=""','data-pos="'+e+'"'),e=jQuery(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?r=r.replace('<input type="text"  placeholder="10.5" name="ovabrw_rt_price_hour[]" value="" class="ovabrw_rt_price_hour"/>',""):"hour"===e&&(r=r.replace('<input type="text"  placeholder="10.5" name="ovabrw_rt_price[]" value="" class="ovabrw_rt_price"/>',"")),jQuery(this).closest(".ovabrw_rt").find("tbody").first().append(r),O.ovabrw_datepicker()}),jQuery(".ovabrw_metabox_car_rental").on("click",".ovabrw_rt .delete_rt",function(e){e.preventDefault(),jQuery(this).closest(".row_rt_record").remove(),O.brw_manage_special_time_sort_rt()}),jQuery(".ovabrw_metabox_car_rental").on("click","a.insert_rt_discount",function(e){e.preventDefault();var r=jQuery(this).find(".wrap_rt_discount tbody").html(),e=jQuery(this).closest(".row_rt_record").data("pos"),r=r.replace(/ovabrw_key/g,e),e=jQuery(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?r=r.replace('<option value="hours">Hour(s)</option>',""):"hour"===e&&(r=r.replace('<option value="days">Day(s)</option>',"")),jQuery(this).closest(".ovabrw_rt_discount").find("tbody").first().append(r),O.ovabrw_datepicker()}),jQuery(".ovabrw_metabox_car_rental").on("click",".ovabrw_rt .delete_discount",function(e){e.preventDefault(),jQuery(this).closest(".tr_rt_discount").remove()})},brw_manage_vehicle_with_location:function(){"yes"==jQuery("input[type=radio][name=ovabrw_vehicle_require_location]:checked").val()?jQuery("#meta-box-id-vehicle .ovabrw-row.location_vehicle").css("display","block"):jQuery("#meta-box-id-vehicle .ovabrw-row.location_vehicle").css("display","none"),jQuery("input[type=radio][name=ovabrw_vehicle_require_location]").change(function(){"yes"==this.value?jQuery("#meta-box-id-vehicle .ovabrw-row.location_vehicle").css("display","block"):"no"==this.value&&jQuery("#meta-box-id-vehicle .ovabrw-row.location_vehicle").css("display","none")})},brw_show_hide_field_edit_product(){var e,r="Regular Price / Day";"undefined"!=typeof label_regular_per_day&&(r=label_regular_per_day),jQuery("#product-type").length&&("ovabrw_car_rental"==jQuery("#product-type").val()?jQuery("#ovabrw_price_type").length&&("hour"!=(e=jQuery("#ovabrw_price_type").val())&&"transportation"!=e?(jQuery("#general_product_data .pricing").addClass("show_if_variable_bulk").show(),jQuery("#general_product_data ._regular_price_field").show(),jQuery("#general_product_data ._sale_price_field").hide(),jQuery("#general_product_data ._regular_price_field label").first().html(" ").append("<span> "+r+"</span>")):(jQuery("#general_product_data ._regular_price_field").hide(),jQuery("#general_product_data .pricing").hide(),jQuery("#general_product_data ._sale_price_field").hide())):(jQuery("#general_product_data ._regular_price_field label span").show(),jQuery("#general_product_data ._regular_price_field label").first().html(" ").append("<span> Price</span>")),jQuery("#product-type").on("change",function(){var e;"ovabrw_car_rental"==jQuery("#product-type").val()?jQuery("#ovabrw_price_type").length&&("hour"!=(e=jQuery("#ovabrw_price_type").val())&&"transportation"!=e?(jQuery("#general_product_data .pricing").addClass("show_if_variable_bulk").show(),jQuery("#general_product_data ._regular_price_field").show(),jQuery("#general_product_data ._sale_price_field").hide(),jQuery("#general_product_data ._regular_price_field label").first().html(" ").append("<span> "+r+"</span>")):(jQuery("#general_product_data ._regular_price_field").hide(),jQuery("#general_product_data .pricing").hide(),jQuery("#general_product_data ._sale_price_field").hide())):(jQuery("#general_product_data ._regular_price_field label span").show(),jQuery("#general_product_data ._regular_price_field label").first().html(" ").append("<span> Price</span>"))})),jQuery(".ovabrw_metabox_car_rental").each(function(){jQuery(this).bind("change_price_type",function(){var e=jQuery(this).find("select#ovabrw_price_type :selected").val();jQuery(".ovabrw_metabox_car_rental").attr("ova_price_type",e),jQuery(".ovabrw_metabox_car_rental ._regular_price_field label span").remove(),"period_time"==e?(jQuery("#general_product_data ._regular_price_field").hide(),jQuery("#general_product_data").find("._regular_price_field .wc_input_price").val("0"),jQuery("#regular_price").val(0),jQuery(this).find(".price_period_time").show(),jQuery(this).find("._regular_price_field").hide(),jQuery(this).find(".price_not_period_time").hide(),jQuery(this).find(".ovabrw_regul_price_hour_field").hide(),jQuery(this).find(".ovabrw_price_daily").hide(),jQuery(this).find(".ovabrw_rent_time_min_wrap").hide(),jQuery(this).find(".ovabrw_define_1_day_field").hide(),jQuery(this).find(".ovabrw_local_price_wrap").hide(),jQuery(this).find(".ovabrw_choose_location").show(),jQuery(this).find(".ovabrw_dropoff_date_by_setting_field").hide(),jQuery(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_field").show(),jQuery(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field").hide(),jQuery(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field #ovabrw_prepare_vehicle_day").val(0),jQuery(".ovabrw_metabox_car_rental .ovabrw_unfixed_time_field").show()):"day"==e?(jQuery("#general_product_data .options_group.pricing").show(),jQuery("#general_product_data ._regular_price_field").show(),jQuery("#general_product_data ._regular_price_field label").first().html(" ").append("<span> "+r+"</span>"),jQuery(".ovabrw_metabox_car_rental .pricing").addClass("show_if_variable_bulk").show(),jQuery(".ovabrw_metabox_car_rental ._sale_price_field").hide(),jQuery(".ovabrw_metabox_car_rental ._regular_price_field label").first().html(" ").append("<span> "+r+"</span>"),jQuery(".wcfm_product_manager_general_fields .sale_price").hide(),jQuery(".wcfm_product_manager_general_fields #sale_price").hide(),jQuery(".wcfm_product_manager_general_fields .sales_schedule").hide(),jQuery(this).find("._regular_price_field").show(),jQuery(this).find(".ovabrw_price_daily").show(),jQuery(this).find(".ovabrw_regul_price_hour_field").hide(),jQuery(this).find(".price_period_time").hide(),jQuery(this).find(".price_not_period_time").show(),jQuery(this).find(".ovabrw_dropoff_date_by_setting_field").hide(),jQuery(this).find(".ovabrw_rent_time_min_wrap").show(),jQuery(this).find(".ovabrw_rent_day_max_field ").show(),jQuery(this).find(".ovabrw_rent_hour_max_field ").hide(),jQuery(this).find(".ovabrw_rent_day_min_field ").show(),jQuery(this).find(".ovabrw_rent_hour_min_field ").hide(),jQuery(this).find(".ovabrw_define_1_day_field ").show(),jQuery(this).find(".ovabrw_local_price_wrap").hide(),jQuery(this).find(".ovabrw_choose_location").show(),jQuery(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_field").hide(),jQuery(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_field #ovabrw_prepare_vehicle").val(0),jQuery(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field").show(),jQuery(".ovabrw_metabox_car_rental .ovabrw_unfixed_time_field").hide()):"hour"==e?(jQuery("#general_product_data ._regular_price_field").hide(),jQuery("#general_product_data").find("._regular_price_field .wc_input_price").val(0),jQuery("#regular_price").val(0),jQuery(this).find(".ovabrw_price_daily").hide(),jQuery(this).find("._regular_price_field").hide(),jQuery(this).find(".ovabrw_regul_price_hour_field").show(),jQuery(this).find(".price_period_time").hide(),jQuery(this).find(".price_not_period_time").show(),jQuery(this).find(".ovabrw_dropoff_date_by_setting_field").hide(),jQuery(this).find(".ovabrw_rent_time_min_wrap").show(),jQuery(this).find(".ovabrw_rent_day_max_field ").hide(),jQuery(this).find(".ovabrw_rent_hour_max_field ").show(),jQuery(this).find(".ovabrw_rent_day_min_field ").hide(),jQuery(this).find(".ovabrw_rent_hour_min_field ").show(),jQuery(this).find(".ovabrw_define_1_day_field ").hide(),jQuery(this).find(".ovabrw_local_price_wrap").hide(),jQuery(this).find(".ovabrw_choose_location").show(),jQuery(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_field").show(),jQuery(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field").hide(),jQuery(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field #ovabrw_prepare_vehicle_day").val(0),jQuery(".ovabrw_metabox_car_rental .ovabrw_unfixed_time_field").hide()):"mixed"==e?(jQuery("#general_product_data .options_group.pricing").show(),jQuery("#general_product_data ._regular_price_field").show(),jQuery("#general_product_data ._regular_price_field label").first().html("").append("<span> "+r+"</span>"),jQuery(".ovabrw_metabox_car_rental .pricing").addClass("show_if_variable_bulk").show(),jQuery(".ovabrw_metabox_car_rental ._sale_price_field").hide(),jQuery(".ovabrw_metabox_car_rental ._regular_price_field label").first().html("").append("<span> "+r+"</span>"),jQuery(this).find("._regular_price_field").show(),jQuery(this).find(".ovabrw_price_daily").show(),jQuery(this).find(".ovabrw_regul_price_hour_field").show(),jQuery(this).find(".price_period_time").hide(),jQuery(this).find(".price_not_period_time").show(),jQuery(this).find(".ovabrw_dropoff_date_by_setting_field").hide(),jQuery(this).find(".ovabrw_rent_time_min_wrap").show(),jQuery(this).find(".ovabrw_regul_price_hour_field").show(),jQuery(this).find(".ovabrw_rent_day_max_field ").hide(),jQuery(this).find(".ovabrw_rent_hour_max_field ").show(),jQuery(this).find(".ovabrw_rent_day_min_field ").hide(),jQuery(this).find(".ovabrw_rent_hour_min_field ").show(),jQuery(this).find(".ovabrw_define_1_day_field ").hide(),jQuery(this).find(".ovabrw_local_price_wrap").hide(),jQuery(this).find(".ovabrw_choose_location").show(),jQuery(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_field").show(),jQuery(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field").hide(),jQuery(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field #ovabrw_prepare_vehicle_day").val(0),jQuery(".ovabrw_metabox_car_rental .ovabrw_unfixed_time_field").hide()):"transportation"==e&&(jQuery("#general_product_data ._regular_price_field").hide(),jQuery("#general_product_data").find("._regular_price_field .wc_input_price").val("0"),jQuery("#regular_price").val(0),jQuery(this).find(".ovabrw_local_price_wrap").show(),jQuery(this).find(".ovabrw_choose_location").hide(),jQuery(this).find(".ovabrw_price_daily").hide(),jQuery(this).find("._regular_price_field").hide(),jQuery(this).find(".ovabrw_regul_price_hour_field").hide(),jQuery(this).find(".price_not_period_time").hide(),jQuery(this).find(".ovabrw_define_1_day_field ").hide(),jQuery(this).find(".price_period_time").hide(),jQuery(this).find(".ovabrw_rent_time_min_wrap ").hide(),jQuery(this).find(".ovabrw_dropoff_date_by_setting_field").show(),jQuery(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_field").hide(),jQuery(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_field #ovabrw_prepare_vehicle").val(0),jQuery(".ovabrw_metabox_car_rental .ovabrw_prepare_vehicle_day_field").show(),jQuery(".ovabrw_metabox_car_rental .ovabrw_unfixed_time_field").hide())}),jQuery(this).trigger("change_price_type"),jQuery(this).find("select#ovabrw_price_type").change(function(){jQuery(this).trigger("change_price_type")})}),jQuery("#ovabrw-rental-type").on("change",function(){"day"!==jQuery(this).val()?jQuery(".rental_define_day").css("display","none"):jQuery(".rental_define_day").css("display","block")})},brw_product_templates(){0<jQuery('select[name="ova_brw_template_elementor_template"]').length&&jQuery('select[name="ova_brw_template_elementor_template"]').select2()},brw_product_map(){var e,r;M.fn.product_map=function(e){e=M.extend({lat:-33.8688,lng:151.2195,zoom:17},e);var r=new google.maps.Map(document.getElementById("admin_show_map"),{center:{lat:e.lat,lng:e.lng},zoom:e.zoom,gestureHandling:"cooperative"}),e=document.getElementById("pac-input"),a=new google.maps.places.Autocomplete(e);a.bindTo("bounds",r),r.controls[google.maps.ControlPosition.TOP_LEFT].push(e);var e=M("#pac-input").val(),t=new google.maps.InfoWindow({content:e}),o=new google.maps.Marker({map:r,position:r.getCenter()});o.addListener("click",function(){t.open(r,o)}),a.addListener("place_changed",function(){t.close();var e=a.getPlace();M("#map_info #ovabrw_address").val(M("input#pac-input").val()),e.geometry&&(e.geometry.viewport?r.fitBounds(e.geometry.viewport):(r.setCenter(e.geometry.location),r.setZoom(17)),o.setPlace({placeId:e.place_id,location:e.geometry.location}),o.setVisible(!0),M("#infowindow-content #place-name").val(e.name),M("#map_info #ovabrw_address").val(e.formatted_address),M("#map_info #ovabrw_latitude").val(e.geometry.location.lat()),M("#map_info #ovabrw_longitude").val(e.geometry.location.lng()),t.setContent(e.formatted_address),t.open(r,o))})},"undefined"!=typeof google&&0<M("#admin_show_map").length&&(e=parseFloat(M("input#ovabrw_latitude").val()),r=parseFloat(M("input#ovabrw_longitude").val()),M("#admin_show_map").product_map({lat:e,lng:r,zoom:17}))},brw_admin_settings(){function e(e){var r;e&&(r=e.closest("tbody").find('select[name="ova_brw_request_booking_order_status"]'),"yes"==e.val()?r.closest("tr").show():r.closest("tr").hide())}M('select[name="ova_brw_request_booking_create_order"]').each(function(){e(M(this)),M(this).on("change",function(){e(M(this))})})},brw_hidden_field(){0<M('input[name="ova_brw_google_key_map"]').length&&M('input[name="ova_brw_google_key_map"]').closest("tr").hide(),0<M('input[name="ova_brw_latitude_map_default"]').length&&M('input[name="ova_brw_latitude_map_default"]').closest("tr").hide(),0<M('input[name="ova_brw_longitude_map_default"]').length&&M('input[name="ova_brw_longitude_map_default"]').closest("tr").hide(),0<M('select[name="ova_brw_booking_form_show_pickup_location"]').length&&M('select[name="ova_brw_booking_form_show_pickup_location"]').closest("tr").hide(),0<M('select[name="ova_brw_booking_form_show_pickoff_location"]').length&&M('select[name="ova_brw_booking_form_show_pickoff_location"]').closest("tr").hide(),0<M('select[name="ova_brw_request_booking_form_show_pickup_location"]').length&&M('select[name="ova_brw_request_booking_form_show_pickup_location"]').closest("tr").hide(),0<M('select[name="ova_brw_request_booking_form_show_pickoff_location"]').length&&M('select[name="ova_brw_request_booking_form_show_pickoff_location"]').closest("tr").hide(),0<M('select[name="ova_brw_search_show_pick_up_location"]').length&&M('select[name="ova_brw_search_show_pick_up_location"]').closest("tr").hide(),0<M('select[name="ova_brw_search_show_drop_off_location"]').length&&M('select[name="ova_brw_search_show_drop_off_location"]').closest("tr").hide(),0<M('select[name="ova_brw_search_require_pick_up_location"]').length&&M('select[name="ova_brw_search_require_pick_up_location"]').closest("tr").hide(),0<M('select[name="ova_brw_search_require_drop_off_location"]').length&&M('select[name="ova_brw_search_require_drop_off_location"]').closest("tr").hide(),0<M('input[name="admin_manage_order_show_location"]').length&&M('input[name="admin_manage_order_show_location"]').closest("tr").hide(),0<M('input[name="admin_manage_order_show_vehicle"]').length&&M('input[name="admin_manage_order_show_vehicle"]').closest("tr").hide()}};function a(e){if("loaded"==e){if("undefined"!=typeof cus_tax_hide_p_loaded)for(var r=cus_tax_hide_p_loaded.split(","),a=0;a<r.length;a++)jQuery("#"+r[a]+"div").length&&jQuery("#"+r[a]+"div").hide()}else if("changed"==e&&"undefined"!=typeof all_cus_tax)for(r=all_cus_tax.split(","),a=0;a<r.length;a++)jQuery("#"+r[a]+"div").length&&jQuery("#"+r[a]+"div").hide()}jQuery(document).ready(function(){O.init()})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,